# The OHIF Cookie is set when the LogViewStudy method is run.
# Has the format shown below in the map.

map $cookie_OHIF $proxy_url {

    volatile;
    default     "orthanc";
    "pacs-1"    "pacs-1";
    "pacs-2"    "pacs-2";
    "pacs-3"    "pacs-3";
}

upstream orthanc {

	server orthanc:8042;
	keepalive 32;
	keepalive_requests 1024;
	keepalive_time 1h;
	keepalive_timeout 600s;
}

# upstream pacs-1 {
# 
# 	server pacs-1:8042;
# 	keepalive 32;
# 	keepalive_requests 1024;
# 	keepalive_time 1h;
# 	keepalive_timeout 600s;
# }
# 
# upstream pacs-2 {
# 
# 	server pacs-2:8042;
# 	keepalive 32;
# 	keepalive_requests 1024;
# 	keepalive_time 1h;
# 	keepalive_timeout 600s;
# }
# 
# upstream pacs-3 {
# 
# 	server pacs-3:8042;
# 	keepalive 32;
# 	keepalive_requests 1024;
# 	keepalive_time 1h;
# 	keepalive_timeout 600s;
# }

server {

    listen 81 ssl http2;
    listen [::]:81 http2;
    server_tokens off;
    # specific mime.types for .mjs file in OHIF
    include /etc/nginx/mime.types;
    
    ssl_certificate /host_tls/server-crt.pem;
    ssl_certificate_key /host_tls/server-key.pem;
    
#     location = /auth {
# 
#         internal;
#         proxy_pass https://;
#         proxy_pass_request_body off;
#         proxy_set_header    Content-Length "";
#         proxy_set_header    X-Original-Uri $request_uri;
#         proxy_set_header    Orig-Ip $remote_addr;
#         proxy_set_header    Cookie $http_cookie;
# 
#     }

    # exposes Orthanc API for OHIF to avoid CORS issues
    
    location /orthanc/ {
    
#         auth_request /auth;
#         auth_request_set $auth_status $upstream_status;
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Accept-Encoding,csrf_token,Origin,Token,Authorization,Accept,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,PacsServer';
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        
        proxy_max_temp_file_size 0;
        client_max_body_size 0;
        
        if ($proxy_url = 'orthanc') {
            rewrite /orthanc(.*) $1 break;
            proxy_pass http://orthanc;
        }
        
#         if ($proxy_url = 'pacs-1') {
#             rewrite /orthanc(.*) $1 break;
#             proxy_pass http://pacs-1;
#         }
#         if ($proxy_url = 'pacs-2') {
#             rewrite /orthanc(.*) $1 break;
#             proxy_pass http://pacs-2;
#         }
#         
#         if ($proxy_url = 'pacs-3') {
#             rewrite /orthanc(.*) $1 break;
#             proxy_pass http://pacs-3;
#         }
    }

    # both / and /Viewer/ shall actually open index.html since Viewer/ is handled by the react router
    location / {
        alias /usr/share/nginx/html/;
        index index.html;
        try_files $uri $uri/ /index.html;
    }
}